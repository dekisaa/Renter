openapi: "3.0.0"
servers:
  - url: http://localhost:8080/api/v1
    description: local
info:
  description: "This is a location and address finder"
  version: "1.0.0"
  title: "Location finder"
tags:
  - name: "location"
    description: "Addresses on this location"

paths:
  /locations:
    post:
      tags:
        - "location"
      summary: "Add a new location to the apartment"
      description: ""
      operationId: "addLocation"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LocationDTO"
      responses:
        "201":
          description: "Location successfully created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LocationDTO"
        "405":
          description: "Invalid input"
  /locations/{id}:
    get:
      tags:
        - "location"
      summary: "Get one location by id."
      description: ""
      operationId: "getLocation"
      parameters:
        - name: id
          in: path
          description: Id of Location.
          required: true
          schema:
            $ref: '#/components/schemas/PositiveInteger'
      responses:
        "200":
          description: "requested location"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LocationDTO"
        "404":
          description: "Location not found"

    # securityDefinitions:
    #   petstore_auth:
    #     type: "oauth2"
    #     authorizationUrl: "http://petstore.swagger.io/oauth/dialog"
    #     flow: "implicit"
    #     scopes:
    #       write:pets: "modify pets in your account"
    #       read:pets: "read your pets"
    #   api_key:
    #     type: "apiKey"
    #     name: "api_key"
    #     in: "header"

components:
  schemas:
    LocationDTO:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        latitude:
          type: "string"
        longitude:
          type: "string"
        address:
          $ref: '#/components/schemas/AddressDTO'
        status:
          type: "string"
    AddressDTO:
      type: object
      description: This objects is created for sending address with location.
      properties:
        street:
          type: string
          description: Describing this objects street name.
          example: Zlatne Grede
          pattern: '^[a-zA-Z]+$'
        number:
          type: integer
          description: Number of the street.
          example: 4
          minimum: 1
        city:
          type: string
          description: In which city.
          example: Novi Sad
          pattern: '^[a-zA-Z]+$'
        zip_code:
          type: integer
          description: Cities zip code.
          example: 21000
          minimum: 1
      required:
        - street
        - number
        - city
        - zip_code
    PositiveInteger:
      type: integer
      minimum: 0
#    TestArray:
#      type: array
#      items:
#        $ref: '#/components/schemas/AddressDTO'
#    TestObject:
#      type: object
#      properties:
#        array:
#          $ref: '#/components/schemas/TestArray'
      
      
      
      
      
      
      
      
      