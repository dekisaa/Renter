/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.2.3).
 * https://openapi-generator.tech Do not edit the class manually.
 */
package com.portfolio.renter.api;

import com.portfolio.renter.api.model.LocationDTO;
import io.swagger.annotations.*;
import javax.validation.Valid;
import javax.validation.constraints.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

@Validated
@Api(value = "Location", description = "the Location API")
public interface LocationApi {

  /**
   * POST /locations : Add a new location to the apartment
   *
   * @param locationDTO (required)
   * @return Location successfully created (status code 201) or Invalid input (status code 405)
   */
  @ApiOperation(
      value = "Add a new location to the apartment",
      nickname = "addLocation",
      notes = "",
      response = LocationDTO.class,
      tags = {
        "location",
      })
  @ApiResponses(
      value = {
        @ApiResponse(
            code = 201,
            message = "Location successfully created",
            response = LocationDTO.class),
        @ApiResponse(code = 405, message = "Invalid input")
      })
  @RequestMapping(
      value = "/locations",
      produces = {"application/json"},
      consumes = {"application/json"},
      method = RequestMethod.POST)
  ResponseEntity<LocationDTO> addLocation(
      @ApiParam(value = "", required = true) @Valid @RequestBody LocationDTO locationDTO);

  /**
   * GET /locations/{id} : Get one location by id.
   *
   * @param id Id of Location. (required)
   * @return requested location (status code 200) or Location not found (status code 404)
   */
  @ApiOperation(
      value = "Get one location by id.",
      nickname = "getLocation",
      notes = "",
      response = LocationDTO.class,
      tags = {
        "location",
      })
  @ApiResponses(
      value = {
        @ApiResponse(code = 200, message = "requested location", response = LocationDTO.class),
        @ApiResponse(code = 404, message = "Location not found")
      })
  @RequestMapping(
      value = "/locations/{id}",
      produces = {"application/json"},
      method = RequestMethod.GET)
  ResponseEntity<LocationDTO> getLocation(
      @Min(0) @ApiParam(value = "Id of Location.", required = true) @PathVariable("id") Integer id);
}
